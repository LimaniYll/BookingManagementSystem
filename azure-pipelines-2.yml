# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
# .azure-pipelines.yml

trigger:
  branches:
    include:
      - master
pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  apiProject: 'BookingManagementSystem' 

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '7.0.0'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- script: |
    echo "##vso[task.setvariable variable=dotnet-install-dir]$(Agent.ToolsDirectory)/dotnet"
    export PATH=$(dotnet-install-dir):$PATH
  displayName: 'Set .NET Core SDK Path'

- task: DotNetCoreCLI@2
  displayName: 'Restore dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration) --no-restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration) --no-restore --collect:"XPlat Code Coverage"'
    projects: '**/*.csproj'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Results'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*.cobertura.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/CodeCoverage'

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: 'publish'
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    projects: '**/*.csproj'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'drop'
    publishLocation: 'Container'
